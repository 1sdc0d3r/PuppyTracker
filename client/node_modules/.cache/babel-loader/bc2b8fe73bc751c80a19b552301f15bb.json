{"ast":null,"code":"var _jsxFileName = \"/Users/Braden/Documents/Programming/Side Projects/puppy-tracker/client/src/components/LitterForm.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport \"../style/LitterForm/LitterForm.css\";\nimport axios from \"axios\";\nimport { withRouter } from \"react-router-dom\";\nconst api_url = \"http://localhost:5000/api\";\nexport default withRouter(function LitterForm({\n  history\n}) {\n  const {\n    register,\n    handleSubmit,\n    watch,\n    errors\n  } = useForm();\n\n  const onSubmit = litterData => {\n    // litterData.puppies = puppies;\n    // todo set date in correct format\n    console.log(\"litter submit\", litterData);\n    axios.post(`${api_url}/litter`, litterData).then(res => history.push(\"/puppy\", {\n      litterId: res.data\n    })).catch(err => console.log(err.response.data.message));\n  }; // todo # of puppies/litter\n\n\n  const [puppies, setPuppies] = useState([]); // const [newPuppyId, setNewPuppyId] = useState(0);\n  // const [puppyForm, setPuppyForm] = useState(false);\n  // const [editingPuppy, setEditingPuppy] = useState(false);\n  // todo add in error messages (all at top?)\n\n  const [litterFormData, setLitterFormData] = useState({\n    expectedDate: expectedDateHandler(\"breedDate\", 63),\n    newHomeDate: \"\"\n  });\n  useEffect(() => {\n    const id = 1;\n    axios.get(`${api_url}/litter/${id}/puppies`).then(res => setPuppies(res.data)).catch(err => console.log(err.response.data));\n  }, []);\n  return (\n    /*#__PURE__*/\n    //  puppyForm ? (\n    //   <PuppyForm\n    //     // newPuppyId={newPuppyId}\n    //     puppies={puppies}\n    //     setPuppies={setPuppies}\n    //     setPuppyForm={setPuppyForm}\n    //     RemovePuppy={removePuppyHandler}\n    //     editingPuppy={editingPuppy}\n    //     setEditingPuppy={setEditingPuppy}\n    //     cancel={() => {\n    //       setEditingPuppy(false);\n    //       setPuppyForm(false);\n    //     }}\n    //   />\n    // ) : (\n    React.createElement(\"div\", {\n      className: \"litter-form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"litter-info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }\n    }, \"Owner's Name:\", \" \", /*#__PURE__*/React.createElement(\"input\", {\n      name: \"ownerName\",\n      placeholder: \"Owner's Name\",\n      onChange: handleFormChange,\n      defaultValue: litterFormData.ownerName,\n      ref: register,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 15\n      }\n    })), errors.dam && /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 28\n      }\n    }, \"this field is required:\"), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }\n    }, \"Dam:\", \" \", /*#__PURE__*/React.createElement(\"input\", {\n      name: \"dam\",\n      placeholder: \"Dam\",\n      type: \"text\",\n      list: \"dams\",\n      onChange: handleFormChange,\n      defaultValue: litterFormData.dam,\n      ref: register({\n        required: false\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"datalist\", {\n      id: \"dams\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }\n    }, \"Rose\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }\n    }, \"Sadie\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }\n    }, \"Athena\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }\n    }, \"Darby\"))), errors.sire && /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 29\n      }\n    }, \"this field is required:\"), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }\n    }, \"Sire:\", \" \", /*#__PURE__*/React.createElement(\"input\", {\n      name: \"sire\",\n      placeholder: \"Sire\",\n      type: \"text\",\n      list: \"sires\",\n      onChange: handleFormChange,\n      defaultValue: litterFormData.sire,\n      ref: register({\n        required: false\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"datalist\", {\n      id: \"sires\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }\n    }, \"Rodeo\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }\n    }, \"Cowboy\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }\n    }, \"Birch\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }\n    }, \"Rosco\")))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }\n    }, errors.litterDate && /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 35\n      }\n    }, \"this field is required:\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"date\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 15\n      }\n    }, \"Breed Date:\", \" \", /*#__PURE__*/React.createElement(\"input\", {\n      name: \"breedDate\",\n      type: \"date\",\n      onChange: handleFormChange,\n      defaultValue: litterFormData.breedDate,\n      ref: register({\n        required: false\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 15\n      }\n    }, \"Expected Date:\", \" \", expectedDateHandler(\"breedDate\", 63, \"expectedDate\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"date\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 15\n      }\n    }, \"Litter Date:\", \" \", /*#__PURE__*/React.createElement(\"input\", {\n      name: \"litterDate\",\n      type: \"date\",\n      onChange: handleFormChange,\n      defaultValue: litterFormData.litterDate,\n      ref: register({\n        required: false\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 15\n      }\n    }, \"New Home: \", expectedDateHandler(\"litterDate\", 56))))), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Next\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }\n    })))\n  );\n\n  function expectedDateHandler(dateFrom, days, dataField) {\n    if (watch(dateFrom)) {\n      const baseDate = watch(dateFrom).split(\"-\");\n      let date = new Date(baseDate[0], --baseDate[1], baseDate[2]);\n      let expectedDate = new Date();\n      expectedDate.setDate(date.getDate() + days);\n      expectedDate = expectedDate.toISOString().slice(0, 10); // console.log({ baseDate, date, expectedDate });\n\n      return expectedDate;\n    }\n\n    return \"N/A\";\n  } // function editPuppyHandler(id) {\n  // setEditingPuppy(puppies.find((puppy) => puppy.id === id));\n  // setPuppyForm(true);\n  // }\n\n\n  function removePuppyHandler(id) {\n    // todo shift id's of other puppies\n    console.log(\"REMOVE\", id);\n    setPuppies(puppies.filter(puppy => puppy.id !== id));\n  }\n\n  function handleFormChange(evt) {\n    setLitterFormData({ ...litterFormData,\n      [evt.target.name]: evt.target.value\n    });\n  }\n});","map":{"version":3,"sources":["/Users/Braden/Documents/Programming/Side Projects/puppy-tracker/client/src/components/LitterForm.jsx"],"names":["React","useState","useEffect","useForm","axios","withRouter","api_url","LitterForm","history","register","handleSubmit","watch","errors","onSubmit","litterData","console","log","post","then","res","push","litterId","data","catch","err","response","message","puppies","setPuppies","litterFormData","setLitterFormData","expectedDate","expectedDateHandler","newHomeDate","id","get","handleFormChange","ownerName","dam","required","sire","litterDate","breedDate","dateFrom","days","dataField","baseDate","split","date","Date","setDate","getDate","toISOString","slice","removePuppyHandler","filter","puppy","evt","target","name","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport \"../style/LitterForm/LitterForm.css\";\nimport axios from \"axios\";\nimport { withRouter } from \"react-router-dom\";\nconst api_url = \"http://localhost:5000/api\";\n\nexport default withRouter(function LitterForm({ history }) {\n  const { register, handleSubmit, watch, errors } = useForm();\n  const onSubmit = (litterData) => {\n    // litterData.puppies = puppies;\n    // todo set date in correct format\n    console.log(\"litter submit\", litterData);\n    axios\n      .post(`${api_url}/litter`, litterData)\n      .then((res) => history.push(\"/puppy\", { litterId: res.data }))\n      .catch((err) => console.log(err.response.data.message));\n  };\n  // todo # of puppies/litter\n  const [puppies, setPuppies] = useState([]);\n  // const [newPuppyId, setNewPuppyId] = useState(0);\n  // const [puppyForm, setPuppyForm] = useState(false);\n  // const [editingPuppy, setEditingPuppy] = useState(false);\n  // todo add in error messages (all at top?)\n  const [litterFormData, setLitterFormData] = useState({\n    expectedDate: expectedDateHandler(\"breedDate\", 63),\n    newHomeDate: \"\",\n  });\n  useEffect(() => {\n    const id = 1;\n    axios\n      .get(`${api_url}/litter/${id}/puppies`)\n      .then((res) => setPuppies(res.data))\n      .catch((err) => console.log(err.response.data));\n  }, []);\n\n  return (\n    //  puppyForm ? (\n    //   <PuppyForm\n    //     // newPuppyId={newPuppyId}\n    //     puppies={puppies}\n    //     setPuppies={setPuppies}\n    //     setPuppyForm={setPuppyForm}\n    //     RemovePuppy={removePuppyHandler}\n    //     editingPuppy={editingPuppy}\n    //     setEditingPuppy={setEditingPuppy}\n    //     cancel={() => {\n    //       setEditingPuppy(false);\n    //       setPuppyForm(false);\n    //     }}\n    //   />\n    // ) : (\n    <div className=\"litter-form\">\n      {/* \"handleSubmit\" will validate your inputs before invoking \"onSubmit\" */}\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <div className=\"litter-info\">\n          <div className=\"row\">\n            <label>\n              Owner's Name:{\" \"}\n              <input\n                name=\"ownerName\"\n                placeholder=\"Owner's Name\"\n                onChange={handleFormChange}\n                defaultValue={litterFormData.ownerName}\n                ref={register}\n              />\n            </label>\n            {errors.dam && <span>this field is required:</span>}\n            <label>\n              Dam:{\" \"}\n              <input\n                name=\"dam\"\n                placeholder=\"Dam\"\n                type=\"text\"\n                list=\"dams\"\n                onChange={handleFormChange}\n                defaultValue={litterFormData.dam}\n                ref={register({ required: false })}\n              />\n              {\n                //todo datalist populate from past entries\n              }\n              <datalist id=\"dams\">\n                <option>Rose</option>\n                <option>Sadie</option>\n                <option>Athena</option>\n                <option>Darby</option>\n              </datalist>\n            </label>\n            {errors.sire && <span>this field is required:</span>}\n            <label>\n              Sire:{\" \"}\n              <input\n                name=\"sire\"\n                placeholder=\"Sire\"\n                type=\"text\"\n                list=\"sires\"\n                onChange={handleFormChange}\n                defaultValue={litterFormData.sire}\n                ref={register({ required: false })}\n              />\n              <datalist id=\"sires\">\n                <option>Rodeo</option>\n                <option>Cowboy</option>\n                <option>Birch</option>\n                <option>Rosco</option>\n              </datalist>\n            </label>\n          </div>\n          <div className=\"row\">\n            {errors.litterDate && <span>this field is required:</span>}\n            {/* //todo date format/validation MM/DD/YY  */}\n            <div className=\"date\">\n              <label>\n                Breed Date:{\" \"}\n                <input\n                  name=\"breedDate\"\n                  type=\"date\"\n                  onChange={handleFormChange}\n                  defaultValue={litterFormData.breedDate}\n                  ref={register({ required: false })}\n                />\n              </label>\n              <p>\n                Expected Date:{\" \"}\n                {expectedDateHandler(\"breedDate\", 63, \"expectedDate\")}\n              </p>\n            </div>\n            <div className=\"date\">\n              <label>\n                Litter Date:{\" \"}\n                <input\n                  name=\"litterDate\"\n                  type=\"date\"\n                  onChange={handleFormChange}\n                  defaultValue={litterFormData.litterDate}\n                  ref={register({ required: false })}\n                />\n              </label>\n              <p>New Home: {expectedDateHandler(\"litterDate\", 56)}</p>\n            </div>\n          </div>\n        </div>\n        {/* <table className=\"puppies\">\n          <thead>\n            <tr>\n              <th>id</th>\n              <th>name</th>\n              <th>sex</th>\n              <th>markings</th>\n              <th>Name</th>\n              <th>phone</th>\n              <th>price</th>\n              <th>paymentValue</th>\n              <th>paymentType</th>\n              <th>fees</th>\n              <th>sellerPayment</th>\n              <th>commission</th>\n              <th>AKC</th>\n              <th>listed</th>\n            </tr>\n          </thead>\n          <tbody>\n            {puppies\n              ?.sort((a, b) => a.id - b.id)\n              .map(\n                ({\n                  id,\n                  sex,\n                  address,\n                  akcRegistered,\n                  commission,\n                  fees,\n                  firstName,\n                  lastName,\n                  listed,\n                  markings,\n                  name,\n                  phone,\n                  paymentType,\n                  paymentValue,\n                  price,\n                  sellerPayment,\n                }) => (\n                  <tr className=\"puppy\">\n                    <td>{id}</td>\n                    <td>{name}</td>\n                    <td>{sex}</td>\n                    <td>{markings}</td>\n                    <td>\n                      {firstName} {lastName}\n                    </td>\n                    <td>{phone}</td>\n                    <td>{price}</td>\n                    <td>{paymentValue}</td>\n                    <td>{paymentType}</td>\n                    <td>{fees}</td>\n                    <td>{sellerPayment}</td>\n                    <td>{commission}</td>\n                    <td>{akcRegistered ? \"Yes\" : \"No\"}</td>\n                    <td>{listed ? \"Yes\" : \"No\"}</td>\n                    <button onClick={() => editPuppyHandler(id)}>Edit</button>\n                  </tr>\n                )\n              )}\n          </tbody>\n        </table> */}\n        {/* <button\n          onClick={() => {\n            // setNewPuppyId(newPuppyId + 1);\n            setPuppyForm(true);\n          }}\n        >\n          Add Puppy\n        </button> */}\n        <input type=\"submit\" value=\"Next\" />\n      </form>\n      {/* <PuppyForm\n        newPuppyId={newPuppyId}\n        puppies={puppies}\n        setPuppies={setPuppies}\n        setPuppyForm={setPuppyForm}\n        RemovePuppy={removePuppyHandler}\n        editingPuppy={editingPuppy}\n        setEditingPuppy={setEditingPuppy}\n        cancel={() => {\n          setEditingPuppy(false);\n          setPuppyForm(false);\n        }}\n      /> */}\n    </div>\n  );\n\n  function expectedDateHandler(dateFrom, days, dataField) {\n    if (watch(dateFrom)) {\n      const baseDate = watch(dateFrom).split(\"-\");\n      let date = new Date(baseDate[0], --baseDate[1], baseDate[2]);\n      let expectedDate = new Date();\n      expectedDate.setDate(date.getDate() + days);\n      expectedDate = expectedDate.toISOString().slice(0, 10);\n      // console.log({ baseDate, date, expectedDate });\n      return expectedDate;\n    }\n    return \"N/A\";\n  }\n  // function editPuppyHandler(id) {\n  // setEditingPuppy(puppies.find((puppy) => puppy.id === id));\n  // setPuppyForm(true);\n  // }\n  function removePuppyHandler(id) {\n    // todo shift id's of other puppies\n    console.log(\"REMOVE\", id);\n    setPuppies(puppies.filter((puppy) => puppy.id !== id));\n  }\n  function handleFormChange(evt) {\n    setLitterFormData({\n      ...litterFormData,\n      [evt.target.name]: evt.target.value,\n    });\n  }\n});\n"]},"metadata":{},"sourceType":"module"}